#ifndef MARPAESLIFLUA_CONFIG_H
#define MARPAESLIFLUA_CONFIG_H

#cmakedefine C_INLINE @C_INLINE@
#cmakedefine C_INLINE_IS_INLINE @C_INLINE_IS_INLINE@
#ifndef __cplusplus
#  ifndef C_INLINE
#    define inline
#  else
#    ifndef C_INLINE_IS_INLINE
/* Next line is never executed when inline is "inline" */
#      define inline C_INLINE
#    endif
#  endif
#endif

/* Extremely hot functions must be totally without jumps to */
/* other function calls. This attribute should be used with */
/* extreme caution                                          */
#cmakedefine C_GCC_FUNC_ATTRIBUTE_FLATTEN @C_GCC_FUNC_ATTRIBUTE_FLATTEN@
#ifdef C_GCC_FUNC_ATTRIBUTE_FLATTEN
#  define MARPAESLIFLUA_FUNC_ATTRIBUTE_FLATTEN C_GCC_FUNC_ATTRIBUTE_FLATTEN
#else
#  define MARPAESLIFLUA_FUNC_ATTRIBUTE_FLATTEN /* Define it to nothing */
#endif

#cmakedefine HAVE_SYS_TYPES
#cmakedefine HAVE_STDINT_H
#cmakedefine HAVE_STDLIB_H
#cmakedefine HAVE_STDDEF_H
#cmakedefine HAVE_MATH_H
#cmakedefine HAVE_LOCALE_H
#cmakedefine HAVE_FLOAT_H
#cmakedefine HAVE_LIMITS_H
#cmakedefine HAVE_ERRNO_H
#cmakedefine HAVE_STRING_H
#cmakedefine HAVE_CTYPE_H

#cmakedefine C_CHAR_BIT        @C_CHAR_BIT@
#cmakedefine SIZEOF_VOID_STAR  @SIZEOF_VOID_STAR@
#cmakedefine SIZEOF_CHAR       @SIZEOF_CHAR@
#cmakedefine SIZEOF_SHORT      @SIZEOF_SHORT@
#cmakedefine SIZEOF_INT        @SIZEOF_INT@
#cmakedefine SIZEOF_LONG       @SIZEOF_LONG@
#cmakedefine SIZEOF_LONG_LONG  @SIZEOF_LONG_LONG@

#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_STDINT_H
#include <stdint.h>
#endif
#ifdef HAVE_STDLIB_H
#include <stdlib.h>
#endif
#ifdef HAVE_STDDEF_H
#include <stddef.h>
#endif
#ifdef HAVE_MATH_H
#include <math.h>
#endif
#ifdef HAVE_LOCALE_H
#include <locale.h>
#endif
#ifdef HAVE_FLOAT_H
#include <float.h>
#endif
#ifdef HAVE_LIMITS_H
#include <limits.h>
#endif
#ifdef HAVE_ERRNO_H
#include <errno.h>
#endif
#ifdef HAVE_STRING_H
#include <string.h>
#endif
#ifdef HAVE_CTYPE_H
#include <ctype.h>
#endif

#cmakedefine C_STRTOLD @C_STRTOLD@
#cmakedefine C_STRTOD @C_STRTOD@
#cmakedefine C_STRTOF @C_STRTOF@
#cmakedefine C_CONST @C_CONST@

/* With MSCV, long double is double */
#ifdef _MSC_VER
#  ifndef C_STRTOLD
#    ifdef C_STRTOD
#      define C_STRTOLD C_STRTOD
#    endif
#  endif
#endif

#ifndef C_STRTOF
/* Use down-promotion */
#  ifdef C_STRTOD
#    define C_STRTOF(p,e) (float) (C_STRTOD(p,e))
#  else
#    ifdef C_STRTOLD
#      define C_STRTOF(p,e) (float) (C_STRTOLD(p,e))
#    endif
#  endif
#endif

#ifndef C_STRTOD
/* Use down-promotion */
#  ifdef C_STRTOLD
#    define C_STRTOD(p,e) (double) (C_STRTOLD(p,e))
#  endif
#endif

#cmakedefine C_HUGE_VAL_REPLACEMENT @C_HUGE_VAL_REPLACEMENT@
#cmakedefine C_HUGE_VAL @C_HUGE_VAL@

#cmakedefine C_HUGE_VALF_REPLACEMENT @C_HUGE_VALF_REPLACEMENT@
#cmakedefine C_HUGE_VALF @C_HUGE_VALF@

#cmakedefine C_HUGE_VALL_REPLACEMENT @C_HUGE_VALL_REPLACEMENT@
#cmakedefine C_HUGE_VALL @C_HUGE_VALL@

#cmakedefine C_INFINITY_REPLACEMENT_USING_DIVISION @C_INFINITY_REPLACEMENT_USING_DIVISION@
#cmakedefine C_INFINITY_REPLACEMENT @C_INFINITY_REPLACEMENT@
#cmakedefine C_INFINITY @C_INFINITY@

#cmakedefine C_NAN_REPLACEMENT_USING_DIVISION @C_NAN_REPLACEMENT_USING_DIVISION@
#cmakedefine C_NAN_REPLACEMENT @C_NAN_REPLACEMENT@
#cmakedefine C_NAN @C_NAN@

#cmakedefine C_ISINF @C_ISINF@
#cmakedefine C_ISNAN @C_ISNAN@

#cmakedefine C_STRTOLL @C_STRTOLL@

#cmakedefine C_FPCLASSIFY @C_FPCLASSIFY@
#cmakedefine C_FP_NAN @C_FP_NAN@
#cmakedefine C__FPCLASS_SNAN @C__FPCLASS_SNAN@
#cmakedefine C__FPCLASS_QNAN @C__FPCLASS_QNAN@
#cmakedefine C_FP_INFINITE @C_FP_INFINITE@
#cmakedefine C__FPCLASS_NINF @C__FPCLASS_NINF@
#cmakedefine C__FPCLASS_PINF @C__FPCLASS_PINF@

#cmakedefine WORDS_BIGENDIAN @WORDS_BIGENDIAN@
#cmakedefine C_SIGNBIT @C_SIGNBIT@
#cmakedefine C_COPYSIGN @C_COPYSIGN@
#cmakedefine C_COPYSIGNF @C_COPYSIGNF@
#cmakedefine C_COPYSIGNL @C_COPYSIGNL@

/* __builtin_expect support */
#cmakedefine C___BUILTIN_EXPECT @C___BUILTIN_EXPECT@
#ifdef C___BUILTIN_EXPECT
#  define MARPAESLIFLUA_LIKELY(x)    C___BUILTIN_EXPECT(x, 1)
#  define MARPAESLIFLUA_UNLIKELY(x)  C___BUILTIN_EXPECT(x, 0)
#else
#  define MARPAESLIFLUA_LIKELY(x)    x
#  define MARPAESLIFLUA_UNLIKELY(x)  x
#endif /* C___BUILTIN_EXPECT */

/* forceinline support */
#cmakedefine C_FORCEINLINE @C_FORCEINLINE@
#ifdef C_FORCEINLINE
#  define forceinline C_FORCEINLINE
#else /* Fallback to inline */
#  define forceinline inline
#endif

/* restrict support */
#cmakedefine C_RESTRICT @C_RESTRICT@
#ifdef C_RESTRICT
#  define restrict C_RESTRICT
#else
#  define restrict
#endif

/*
 * genericStack performance is vital
 */
#define GENERICSTACK_INLINE forceinline
#define GENERICSTACK_LIKELY(x) MARPAESLIFLUA_LIKELY(x)
#define GENERICSTACK_UNLIKELY(x) MARPAESLIFLUA_UNLIKELY(x)

/* Just to make things clear in the code */
#define noinline

#endif /* MARPAESLIFLUA_CONFIG_H */
